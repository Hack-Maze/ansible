---
- hosts: master
  become: yes
  tasks:

# remove it from remote control

    - name: "Check if there are processes owned by  {{ UserName }}"
      ansible.builtin.shell:
        cmd: "pgrep -u {{ UserName }} "
      register: procs_check
      ignore_errors: true
    
    - name: "Kill processes owned by {{ UserName }} if they exist"
      ansible.builtin.shell:
        cmd: "pkill -9 -u {{ UserName }}"
      when: procs_check.rc == 0







    - name: "ensure  {{ UserName }} 's user does not exist"
      user:
        name: "{{UserName}}"
        state: absent
    

    - name: "Remove {{ UserName }}'s home directory"
      file:
        path: "/home/{{ UserName }}"
        state: absent
 


    - name: "Remove {{ UserName }}'s cert directory"
      become: yes
      file:
        path: "/etc/kubernetes/users/certificates/{{UserName}}"
        state: absent



    - name: "Remove {{ UserName }} block from a {{ Role }}-rolebindings file"
      ansible.builtin.replace:
        path: /home/hackmaze-user/k8s/{{ Role }}-rolebindings.yml
        regexp: '^\s*- kind: User\n\s*name: {{ UserName }}\n\s*apiGroup: rbac.authorization.k8s.io$'
        replace: ''

    - name: "apply rolebindings after deleting {{ UserName }}"
      shell: "kubectl apply -f /home/hackmaze-user/k8s/{{ Role }}-rolebindings.yml"
      become: yes
      become_user: hackmaze-user




    - name: remove user to sudoers file in control
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: absent
        regexp: '^%{{ UserName }} ALL=(ALL:ALL) NOPASSWD: ALL'
        line: '%{{ UserName }} ALL=(ALL:ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      when: sudo | bool

# remove it from local


    - name: "Kill processes owned by {{ UserName }} if they exist"
      ansible.builtin.shell:
        cmd: "pkill -9 -u {{ UserName }}"
      when: procs_check.rc == 0
      delegate_to: localhost



    - name: "ensure  {{ UserName }} 's user does not exist"
      user:
        name: "{{UserName}}"
        state: absent
      delegate_to: localhost

    - name: "Remove {{ UserName }}'s home directory"
      file:
        path: "/home/{{ UserName }}"
        state: absent
      delegate_to: localhost

    - name: remove user to sudoers file in jump server
      become: yes
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: absent
        regexp: '^%{{ UserName }} ALL=(ALL:ALL) NOPASSWD: ALL'
        line: '%{{ UserName }} ALL=(ALL:ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
      when: sudo | bool
      delegate_to: localhost